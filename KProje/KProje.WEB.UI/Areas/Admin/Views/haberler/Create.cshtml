@model KProje.DAL.Data.Entities.haberler

@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @if (ViewBag.IsSuccess != null && ViewBag.IsSuccess == true)
                {
                    <font color="#0BE842">
                        Başarılı</font>
                }
                else if (ViewBag.IsSuccess != null && ViewBag.IsSuccess == false)
                {
                    <font color="##FF0000">
                        Başarısız</font>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.baslik, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.baslik, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.baslik, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.aciklama, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.aciklama, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.aciklama, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.resim, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.resim, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.resim, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.yanbaslik, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.yanbaslik, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.yanbaslik, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
